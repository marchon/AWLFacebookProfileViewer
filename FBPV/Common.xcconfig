
// Architectures
ONLY_ACTIVE_ARCH = $(ONLY_ACTIVE_ARCH_$(CONFIGURATION))
ONLY_ACTIVE_ARCH_Debug   = YES
ONLY_ACTIVE_ARCH_Release = NO
ONLY_ACTIVE_ARCH_Test    = YES


// Build options
DEBUG_INFORMATION_FORMAT = $(DEBUG_INFORMATION_FORMAT_$(CONFIGURATION))
DEBUG_INFORMATION_FORMAT_Debug   = dwarf
DEBUG_INFORMATION_FORMAT_Release = dwarf-with-dsym
DEBUG_INFORMATION_FORMAT_Test    = dwarf

VALIDATE_PRODUCT = $(VALIDATE_PRODUCT_$(CONFIGURATION))
VALIDATE_PRODUCT_Debug   = NO
VALIDATE_PRODUCT_Release = YES
VALIDATE_PRODUCT_Test    = NO


// Deployment
COPY_PHASE_STRIP = $(COPY_PHASE_STRIP_$(CONFIGURATION))
COPY_PHASE_STRIP_Debug   = NO
COPY_PHASE_STRIP_Release = YES
COPY_PHASE_STRIP_Test    = NO
COMBINE_HIDPI_IMAGES     = YES // Applicable for OSX only


// Packaging
GENERATE_PKGINFO_FILE = YES
PRODUCT_NAME          = $(TARGET_NAME)


// Search Paths
ALWAYS_SEARCH_USER_PATHS = NO


// Code Generation
GCC_GENERATE_TEST_COVERAGE_FILES[sdk=iphonesimulator*] = $(GCC_GENERATE_TEST_COVERAGE_FILES_$(CONFIGURATION))
GCC_GENERATE_TEST_COVERAGE_FILES[sdk=iphoneos*] = NO
GCC_GENERATE_TEST_COVERAGE_FILES_Debug   = NO
GCC_GENERATE_TEST_COVERAGE_FILES_Release = NO
GCC_GENERATE_TEST_COVERAGE_FILES_Test    = YES

GCC_INSTRUMENT_PROGRAM_FLOW_ARCS[sdk=iphonesimulator*] = $(GCC_INSTRUMENT_PROGRAM_FLOW_ARCS_$(CONFIGURATION))
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS[sdk=iphoneos*] = NO
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS_Debug   = NO
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS_Release = NO
GCC_INSTRUMENT_PROGRAM_FLOW_ARCS_Test    = YES

GCC_OPTIMIZATION_LEVEL = $(GCC_OPTIMIZATION_LEVEL_$(CONFIGURATION))
GCC_OPTIMIZATION_LEVEL_Debug   = 0
GCC_OPTIMIZATION_LEVEL_Release = s
GCC_OPTIMIZATION_LEVEL_Test    = 0

GCC_SYMBOLS_PRIVATE_EXTERN = $(GCC_SYMBOLS_PRIVATE_EXTERN_$(CONFIGURATION))
GCC_SYMBOLS_PRIVATE_EXTERN_Debug   = NO
GCC_SYMBOLS_PRIVATE_EXTERN_Release = YES
GCC_SYMBOLS_PRIVATE_EXTERN_Test    = NO

// Custom Compiler Flags
OTHER_CFLAGS = $(OTHER_CFLAGS_$(CONFIGURATION))
OTHER_CFLAGS_Debug   = $(inherited)
OTHER_CFLAGS_Release = -DNS_BLOCK_ASSERTIONS=1 $(inherited)
OTHER_CFLAGS_Test    = $(inherited)

// Language C
GCC_C_LANGUAGE_STANDARD         = gnu11

// Language C++
CLANG_CXX_LANGUAGE_STANDARD     = gnu++0x
CLANG_CXX_LIBRARY               = libc++


// Language Modules
CLANG_ENABLE_MODULES = YES


// Language Objective-C
CLANG_ENABLE_OBJC_ARC           = YES
GCC_ENABLE_OBJC_EXCEPTIONS      = YES


// Preprocessing
GCC_PREPROCESSOR_DEFINITIONS = $(GCC_PREPROCESSOR_DEFINITIONS_$(CONFIGURATION))
GCC_PREPROCESSOR_DEFINITIONS_Debug      = DEBUG=1 $(inherited)
GCC_PREPROCESSOR_DEFINITIONS_Release    = NDEBUG=1 $(inherited)
GCC_PREPROCESSOR_DEFINITIONS_Test       = TEST=1 $(inherited)

ENABLE_NS_ASSERTIONS = $(ENABLE_NS_ASSERTIONS_$(CONFIGURATION))
ENABLE_NS_ASSERTIONS_Debug      = YES
ENABLE_NS_ASSERTIONS_Release    = NO
ENABLE_NS_ASSERTIONS_Test       = YES

ENABLE_STRICT_OBJC_MSGSEND = YES


// Swift
SWIFT_OPTIMIZATION_LEVEL = $(SWIFT_OPTIMIZATION_LEVEL_$(CONFIGURATION))
SWIFT_OPTIMIZATION_LEVEL_Debug = -Onone
SWIFT_OPTIMIZATION_LEVEL_Release = -O
SWIFT_OPTIMIZATION_LEVEL_Test = -Onone


OTHER_SWIFT_FLAGS = $(OTHER_SWIFT_FLAGS_$(CONFIGURATION))
OTHER_SWIFT_FLAGS_Debug      = -D DEBUG $(inherited)
OTHER_SWIFT_FLAGS_Release    = -D NDEBUG $(inherited)
OTHER_SWIFT_FLAGS_Test       = -D TEST $(inherited)

// Warnings Policies
GCC_WARN_PEDANTIC = YES


// Warnings
GCC_WARN_CHECK_SWITCH_STATEMENTS            = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS         = YES
CLANG_WARN_EMPTY_BODY                       = YES
GCC_WARN_SHADOW                             = YES
CLANG_WARN_BOOL_CONVERSION                  = YES
CLANG_WARN_CONSTANT_CONVERSION              = YES
GCC_WARN_64_TO_32_BIT_CONVERSION            = YES
CLANG_WARN_ENUM_CONVERSION                  = YES
CLANG_WARN_INT_CONVERSION                   = YES
CLANG_WARN_IMPLICIT_SIGN_CONVERSION         = YES
GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED    = YES
GCC_WARN_MISSING_PARENTHESES                = YES
GCC_WARN_ABOUT_RETURN_TYPE                  = YES_ERROR
GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS   = YES
GCC_WARN_ABOUT_MISSING_PROTOTYPES           = YES
GCC_WARN_ABOUT_MISSING_NEWLINE              = YES
GCC_WARN_SIGN_COMPARE                       = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION   = YES
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF          = YES
GCC_WARN_UNINITIALIZED_AUTOS                = YES_AGGRESSIVE
GCC_WARN_UNKNOWN_PRAGMAS                    = YES
GCC_WARN_UNUSED_FUNCTION                    = YES
GCC_WARN_UNUSED_LABEL                       = YES
//GCC_WARN_UNUSED_PARAMETER                 = YES
GCC_WARN_UNUSED_VALUE                       = YES
GCC_WARN_UNUSED_VARIABLE                    = YES


// Warnings C++
GCC_WARN_NON_VIRTUAL_DESTRUCTOR         = YES
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS       = YES
GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO   = YES

// Warnings Objective-C
CLANG_WARN__DUPLICATE_METHOD_MATCH         = YES
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
GCC_WARN_UNDECLARED_SELECTOR               = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE           = YES_ERROR
CLANG_WARN_OBJC_ROOT_CLASS                 = YES_ERROR

// Warnings Objective-C and ARC
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF       = YES


// Analyzer Policy
RUN_CLANG_STATIC_ANALYZER = $(RUN_CLANG_STATIC_ANALYZER_$(CONFIGURATION))
RUN_CLANG_STATIC_ANALYZER_Debug   = YES
RUN_CLANG_STATIC_ANALYZER_Release = YES
RUN_CLANG_STATIC_ANALYZER_Test    = NO

CLANG_STATIC_ANALYZER_MODE = $(CLANG_STATIC_ANALYZER_MODE_$(CONFIGURATION))
CLANG_STATIC_ANALYZER_MODE_Debug   = shallow
CLANG_STATIC_ANALYZER_MODE_Release = deep
CLANG_STATIC_ANALYZER_MODE_Test    = shallow


// Static Analyzer
CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES
